class Solution(object):
    def maxProfit(self, prices):
        """
        :type prices: List[int]
        :rtype: int
        """
        profit_array = []
        for i in range(len(prices)):
            for j in range(i,len(prices)):
                profit = prices[j] - prices[i]
                profit_array.append(profit)
        
        if max(profit_array) > 0:
            return max(profit_array)
        else:
            return 0
 ==================================================>fail for Memory Limit Exceeded
class Solution(object):
    def maxProfit(self, prices):
        """
        :type prices: List[int]
        :rtype: int
        """
        max_profit = 0
        for i in range(len(prices)):
            for j in range(i,len(prices)):
                temp_profit = prices[j] - prices[i]
                if max_profit < temp_profit:
                    max_profit = temp_profit
        
        if max_profit != 0 :
            return max_profit
        else:
            return max_profit
==================================================>fail for Time Limit Exceeded
class Solution(object):
    def maxProfit(self, prices):
        """
        :type prices: List[int]
        :rtype: int
        """
        max_profit = 0
        buy_index = 0
        sell_index = 1

        while sell_index < len(prices):
            current_profit = prices[sell_index] - prices[buy_index]
            if prices[sell_index] > prices[buy_index]:
                max_profit =max(current_profit,max_profit)
            else:
                buy_index = sell_index
            sell_index +=1
        return max_profit
        
 
